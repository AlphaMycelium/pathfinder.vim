name: Release

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install test dependencies
      run: |
        python -m pip install -r test_requirements.txt \
        pytest-cov pytest-github-actions-annotate-failures

    - name: Test
      uses: paambaati/codeclimate-action@v2.5.5
      env:
        CC_TEST_REPORTER_ID: 2a15e754c01e881bb38b15428a09d87eab35df4f8e6bcefa6d7f9e360b77b540
      with:
        coverageCommand: |
          pytest -v --doctest-modules --cov=pathfinder --cov-report=xml
        coverageLocations: 'coverage.xml:coverage.py'

  beautify:
    name: Beautify Python code
    runs-on: ubuntu-latest
    needs: [test]
    outputs:
      new_sha: ${{ steps.sha.outputs.SHA }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Run Black
        run: |
          python -m pip install black
          python -m black .
      - name: Sort imports
        run: |
          python -m pip install isort
          python -m isort -y -rc .

      - name: Commit and push changes
        uses: github-actions-x/commit@v2.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'style: beautify Python code'
          name: github-actions
          email: action@github.com
      - name: Get new SHA
        id: sha
        run: |
          new_sha=$(git rev-parse HEAD)
          echo "::set-output name=SHA::$new_sha"

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: [test, beautify]
    if: github.repository == 'AlphaMycelium/pathfinder.vim'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ needs.beautify.outputs.new_sha }}
    - name: Fetch master
      run: git fetch --prune origin +refs/heads/master:refs/remotes/origin/master

    - name: Python Semantic Release
      uses: relekang/python-semantic-release@v7.1.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
